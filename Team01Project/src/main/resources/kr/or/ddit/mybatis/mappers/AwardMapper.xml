<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.yguniv.award.dao.AwardMapper">



<!-- 장학금 유형에 대한 검색 조건 -->
	<sql id="searchFrag">
		<where>
			<if
				test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
				<choose>
					<when test="simpleCondition.searchType eq 'title'">
						AND INSTR(AWARD_NM, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'writer'">
						AND INSTR(AWARD_DETAIL, #{simpleCondition.searchWord}) > 0
					</when>
				
					
					<otherwise>
						AND(INSTR(AWARD_NM, #{simpleCondition.searchWord}) > 0
						OR INSTR(AWARD_DETAIL, #{simpleCondition.searchWord}) > 0
						)
						
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>


<!-- 리스트 출력  -->
<select id="selectList" resultType="AwardVO">
SELECT 

AWARD_CD
,AWARD_EDNST_NM
,AWARD_NM
,AWARD_TYPE
,AWARD_GIVE_AMT
,AWARD_DETAIL
,AWARD_BENEFIT
,AWARD_DOCUMENT

FROM AWARD

</select>



<!-- 장학금 입력  -->

<insert id="insertAward" parameterType="AwardVO">

<selectKey order="BEFORE" keyProperty="awardCd" resultType="string">
    SELECT CONCAT('AW', LPAD(NVL(MAX(TO_NUMBER(SUBSTR(AWARD_CD, 3))), 0) + 1, 3, '0'))
    FROM AWARD
</selectKey>

INSERT INTO AWARD (
  AWARD_CD
  ,AWARD_EDNST_NM
  ,AWARD_NM
  ,AWARD_TYPE
  ,AWARD_GIVE_AMT
  ,AWARD_DETAIL
  ,AWARD_BENEFIT
  ,AWARD_DOCUMENT


)VALUES(
#{awardCd, jdbcType= VARCHAR}
,#{awardEdnstNm, jdbcType= VARCHAR}
,#{awardNm, jdbcType= VARCHAR}
,#{awardType, jdbcType= VARCHAR}
,#{awardGiveAmt, jdbcType= NUMERIC}
,#{awardDetail, jdbcType= CLOB}
,#{awardBenefit, jdbcType= CLOB}
,#{awardDocument, jdbcType= CLOB}


)





</insert>



<!-- 선택한 장학금 유형 -->
<select id="selectAward" resultType="AwardVO">
SELECT 
   AWARD_CD
   ,AWARD_EDNST_NM
    ,AWARD_NM
    ,AWARD_TYPE
    ,AWARD_GIVE_AMT
    ,AWARD_DETAIL
    ,AWARD_BENEFIT
    ,AWARD_DOCUMENT

FROM AWARD
WHERE AWARD_CD =  #{awardCd, jdbcType=VARCHAR}

</select>

<!-- 수정 -->
<update id="updateAward" >

UPDATE AWARD 
SET 

AWARD_EDNST_NM =#{awardEdnstNm, jdbcType= VARCHAR}
, AWARD_NM =#{awardNm, jdbcType= VARCHAR}
, AWARD_TYPE  =#{awardType, jdbcType= VARCHAR}
, AWARD_GIVE_AMT  =#{awardGiveAmt, jdbcType= NUMERIC}
, AWARD_DETAIL  =#{awardDetail, jdbcType= CLOB}
, AWARD_BENEFIT  =#{awardBenefit, jdbcType= CLOB}
, AWARD_DOCUMENT  =#{awardDocument, jdbcType= CLOB}

WHERE AWARD_CD = #{awardCd, jdbcType= VARCHAR}

</update>


<!-- 삭제  -->
<delete id="deleteAward">
DELETE FROM AWARD
WHERE AWARD_CD = #{awardCd, jdbcType=VARCHAR}
</delete>









<select id="selectAdminAwardList" resultType="AwardVO">
SELECT B.*
		FROM
		(
		SELECT ROWNUM RNUM, A.*
		FROM
		(
		SELECT
		  	AWARD_CD
    		,AWARD_EDNST_NM
   		 	,AWARD_NM
    		,AWARD_TYPE
    		,AWARD_GIVE_AMT
    		,AWARD_DETAIL
    		,AWARD_BENEFIT
    		,AWARD_DOCUMENT
		
		FROM AWARD 
		
		<include refid="searchFrag" />
		
		ORDER BY AWARD_CD DESC
			) A
		) B
		
		<![CDATA[
		WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		]]>
</select>


<select id="selectTotalRecord" resultType="int">
		SELECT COUNT(AWARD_CD) FROM AWARD
		<include refid="searchFrag" />
	</select>


</mapper>